<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>„Ç¢„É©„Éº„ÉàÂ±•Ê≠¥ - MetaÂ∫ÉÂëä„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ</title>
    <link rel="stylesheet" href="/style.css">
    <style>
        .alert-history-page {
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .page-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .page-header h2 {
            margin: 0 0 10px 0;
            font-size: 2.2em;
            font-weight: 700;
        }

        .header-info {
            font-size: 1.1em;
            opacity: 0.9;
        }

        .history-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        }

        .history-section h3 {
            margin: 0 0 25px 0;
            color: #333;
            font-size: 1.5em;
            border-bottom: 2px solid #f0f0f0;
            padding-bottom: 15px;
        }

        .no-history {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .no-history-content {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 16px;
        }

        .no-history-icon {
            font-size: 48px;
            opacity: 0.6;
        }

        .no-history p {
            font-size: 1.2em;
            margin: 0;
        }

        .history-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .history-item {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 20px;
            border-left: 4px solid #007bff;
            transition: all 0.3s ease;
        }

        .history-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
        }

        .alert-info {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 10px;
        }

        .alert-level {
            font-size: 1.2em;
            min-width: 30px;
        }

        .alert-level-high {
            color: #dc3545;
        }

        .alert-level-medium {
            color: #ffc107;
        }

        .alert-level-low {
            color: #28a745;
        }

        .alert-metric {
            background: #e9ecef;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.9em;
            font-weight: 600;
            color: #495057;
        }

        .alert-message {
            flex: 1;
            font-weight: 500;
            color: #333;
        }

        .alert-timestamp {
            color: #6c757d;
            font-size: 0.9em;
            text-align: right;
        }

        @media (max-width: 768px) {
            .alert-history-page {
                padding: 15px;
            }

            .page-header {
                padding: 20px;
            }

            .page-header h2 {
                font-size: 1.8em;
            }

            .history-section {
                padding: 20px;
            }

            .alert-info {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }

            .alert-timestamp {
                text-align: left;
                margin-top: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <!-- „Çµ„Ç§„Éâ„Éê„ÉºÔºà„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å®ÂÆåÂÖ®Áµ±‰∏ÄÔºâ -->
        <div class="sidebar">
            <div class="sidebar-header">
                <h3>MetaÂ∫ÉÂëä„É¨„Éù„Éº„Éà</h3>
            </div>
            <nav class="sidebar-nav">
                <a href="/dashboard" class="nav-item">„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ</a>
                <a href="/alerts" class="nav-item">„Ç¢„É©„Éº„ÉàÂÜÖÂÆπ</a>
                <a href="/alert-history" class="nav-item active">„Ç¢„É©„Éº„ÉàÂ±•Ê≠¥</a>
                <a href="/improvement-tasks" class="nav-item">Á¢∫Ë™ç‰∫ãÈ†Ö</a>
                <a href="/improvement-strategies" class="nav-item">ÊîπÂñÑÊñΩÁ≠ñ</a>
                <a href="/chatwork-test" class="nav-item">„ÉÅ„É£„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÉÜ„Çπ„Éà</a>
            </nav>
        </div>

        <main class="main-content">

    <div class="alert-history-page">
        <div class="page-header">
            <h2>üìã „Ç¢„É©„Éº„ÉàÂ±•Ê≠¥</h2>
            <div class="header-info">
                ÈÅéÂéª30Êó•Èñì„ÅÆÂ±•Ê≠¥
            </div>
        </div>

        <div class="history-section">
            <h3>ÈÅéÂéª30Êó•Èñì„ÅÆ„Ç¢„É©„Éº„ÉàÂ±•Ê≠¥</h3>
            
            <div id="history-content">
                <div class="loading">Ë™≠„ÅøËæº„Åø‰∏≠...</div>
            </div>
        </div>
        </main>
    </div>

    <script>
        // „Ç¢„É©„Éº„ÉàÂ±•Ê≠¥„ÇíÂèñÂæó„Åó„Å¶Ë°®Á§∫
        async function loadAlertHistory() {
            try {
                console.log('=== „Ç¢„É©„Éº„ÉàÂ±•Ê≠¥„Éö„Éº„Ç∏: „Éá„Éº„ÇøÂèñÂæóÈñãÂßã ===');
                
                // „Çµ„Éº„Éê„Éº„ÅÆAPI„Åã„ÇâÂÆüÈöõ„ÅÆ„Ç¢„É©„Éº„ÉàÂ±•Ê≠¥„ÇíÂèñÂæó
                const response = await fetch('/api/alert-history');
                const apiData = await response.json();
                
                console.log('API„É¨„Çπ„Éù„É≥„Çπ:', apiData);
                console.log('success:', apiData.success);
                console.log('history:', apiData.history);
                console.log('history length:', apiData.history ? apiData.history.length : 'undefined');
                
                let filteredHistory = [];
                
                if (apiData.success && apiData.history) {
                    filteredHistory = apiData.history;
                    console.log('‚úÖ API„Åã„ÇâÂ±•Ê≠¥„Éá„Éº„ÇøÂèñÂæó:', filteredHistory.length + '‰ª∂');
                } else if (Array.isArray(apiData)) {
                    filteredHistory = apiData;
                    console.log('‚úÖ ÈÖçÂàóÂΩ¢Âºè„Åß„Éá„Éº„ÇøÂèñÂæó:', filteredHistory.length + '‰ª∂');
                } else {
                    console.log('‚ùå API„Åã„Çâ„ÅÆ„Éá„Éº„ÇøÂèñÂæóÂ§±Êïó„ÄÅ„É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„Å´„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ');
                    // „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ: „É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„Åã„ÇâË™≠„ÅøËæº„Åø
                    const stored = localStorage.getItem('alert_history');
                    let history = stored ? JSON.parse(stored) : [];
                    
                    // ÈÅéÂéª30Êó•ÂàÜ„ÅÆ„Éá„Éº„Çø„Çí„Éï„Ç£„É´„Çø„Éº
                    const thirtyDaysAgo = new Date();
                    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);
                    
                    filteredHistory = history.filter(item => 
                        new Date(item.timestamp) > thirtyDaysAgo
                    );
                    console.log('„É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„Åã„ÇâÂèñÂæó:', filteredHistory.length + '‰ª∂');
                }
                
                console.log('ÊúÄÁµÇÁöÑ„Å™Ë°®Á§∫ÂØæË±°:', filteredHistory);
                
                const historyContent = document.getElementById('history-content');
                
                if (filteredHistory.length === 0) {
                    historyContent.innerHTML = `
                        <div class="no-history">
                            <div class="no-history-content">
                                <span class="no-history-icon">üìã</span>
                                <p>„Ç¢„É©„Éº„ÉàÂ±•Ê≠¥„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì</p>
                            </div>
                        </div>
                    `;
                    return;
                }

                const historyList = filteredHistory.map(alert => {
                    const levelClass = getLevelClass(alert.level);
                    const levelIcon = getLevelIcon(alert.level);
                    const formattedDate = formatDate(alert.timestamp);
                    
                    return `
                        <div class="history-item">
                            <div class="alert-info">
                                <span class="alert-level ${levelClass}">
                                    ${levelIcon}
                                </span>
                                <span class="alert-metric">${alert.metric || '‰∏çÊòé'}</span>
                                <span class="alert-message">${alert.message || '„É°„ÉÉ„Çª„Éº„Ç∏„Å™„Åó'}</span>
                            </div>
                            <div class="alert-timestamp">
                                ${formattedDate}
                            </div>
                        </div>
                    `;
                }).join('');

                historyContent.innerHTML = `
                    <div class="history-list">
                        ${historyList}
                    </div>
                `;
            } catch (error) {
                console.error('„Ç¢„É©„Éº„ÉàÂ±•Ê≠¥„ÅÆÂèñÂæó„Ç®„É©„Éº:', error);
                document.getElementById('history-content').innerHTML = `
                    <div class="no-history">
                        <div class="no-history-content">
                            <span class="no-history-icon">‚ùå</span>
                            <p>„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü</p>
                        </div>
                    </div>
                `;
            }
        }

        function getLevelClass(level) {
            switch(level) {
                case 'high': return 'alert-level-high';
                case 'medium': return 'alert-level-medium';
                case 'low': return 'alert-level-low';
                default: return 'alert-level-medium';
            }
        }

        function getLevelIcon(level) {
            switch(level) {
                case 'high': return 'üî¥';
                case 'medium': return 'üü°';
                case 'low': return 'üü¢';
                default: return 'üü°';
            }
        }

        function formatDate(timestamp) {
            return new Date(timestamp).toLocaleString('ja-JP');
        }

        // „Éö„Éº„Ç∏Ë™≠„ÅøËæº„ÅøÊôÇ„Å´Â±•Ê≠¥„ÇíÂèñÂæó
        document.addEventListener('DOMContentLoaded', loadAlertHistory);
    </script>
</body>
</html> 