<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>詳細レポート - Meta広告ダッシュボード</title>
    <link rel="stylesheet" href="/style.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #f5f6fa;
        }
        
        .app-container {
            display: flex;
            height: 100vh;
        }
        
        .sidebar {
            width: 250px;
            background: #2c3e50;
            color: white;
            height: 100vh;
            overflow-y: auto;
        }
        
        .sidebar-header {
            padding: 20px;
            background: rgba(0,0,0,0.1);
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }
        
        .sidebar-header h3 {
            margin: 0;
            font-size: 18px;
            font-weight: 500;
        }
        
        .sidebar-nav {
            padding: 10px 0;
        }
        
        .nav-item {
            display: block;
            padding: 12px 20px;
            color: rgba(255,255,255,0.8);
            text-decoration: none;
            transition: all 0.3s;
            position: relative;
        }
        
        .nav-item:hover {
            background: rgba(255,255,255,0.1);
            color: white;
        }
        
        .nav-item.active {
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .nav-item.active::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 3px;
            background: #fff;
        }
        
        .main-content {
            flex: 1;
            padding: 30px;
            overflow-y: auto;
        }
        
        .content-header {
            margin-bottom: 30px;
        }
        
        .content-title {
            font-size: 28px;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 10px;
        }
        
        .report-filters {
            background: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            display: flex;
            gap: 15px;
            align-items: center;
        }
        
        .report-filters select, .report-filters input {
            padding: 10px 15px;
            border: 1px solid #ced4da;
            border-radius: 5px;
            font-size: 14px;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        .report-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
        
        .report-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .report-card.full-width {
            grid-column: 1 / -1;
        }
        
        .card-title {
            font-size: 18px;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #f0f0f0;
        }
        
        .chart-container {
            position: relative;
            height: 300px;
        }
        
        .data-table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .data-table th {
            background: #f8f9fa;
            padding: 10px;
            text-align: left;
            font-size: 13px;
            color: #6c757d;
            font-weight: 600;
            border-bottom: 2px solid #dee2e6;
        }
        
        .data-table td {
            padding: 10px;
            border-bottom: 1px solid #dee2e6;
            font-size: 14px;
        }
        
        .data-table tbody tr:hover {
            background: #f8f9fa;
        }
        
        .export-buttons {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            margin-bottom: 20px;
        }
        
        .btn-export {
            padding: 8px 16px;
            border: 1px solid #28a745;
            background: white;
            color: #28a745;
            border-radius: 5px;
            cursor: pointer;
            font-size: 13px;
            transition: all 0.3s;
        }
        
        .btn-export:hover {
            background: #28a745;
            color: white;
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            color: #6c757d;
        }
        
        .stat-value {
            font-size: 24px;
            font-weight: 700;
            color: #2c3e50;
        }
        
        .stat-label {
            font-size: 12px;
            color: #6c757d;
            margin-top: 5px;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            margin-top: 20px;
        }
        
        .stat-item {
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="app-container">
        <!-- サイドバー -->
        <div class="sidebar">
            <div class="sidebar-header">
                <h3>Meta広告レポート</h3>
            </div>
            <nav class="sidebar-nav">
                <a href="/dashboard" class="nav-item">ダッシュボード</a>
                <a href="/campaigns" class="nav-item">📊 キャンペーン管理</a>
                <a href="/budget-scheduling" class="nav-item">⏰ 予算スケジューリング</a>
                <a href="/detailed-reports" class="nav-item active">📈 詳細レポート</a>
                <a href="/alerts" class="nav-item">アラート内容</a>
                <a href="/alert-history" class="nav-item">アラート履歴</a>
                <a href="/improvement-tasks" class="nav-item">確認事項</a>
                <a href="/improvement-strategies" class="nav-item">改善施策</a>            </nav>
            <div class="sidebar-footer" style="position: absolute; bottom: 20px; left: 0; right: 0; padding: 0 20px;">
                <form action="/logout" method="POST" style="margin: 0;">
                    <button type="submit" class="nav-item" style="
                        display: block;
                        width: 100%;
                        padding: 12px 20px;
                        background: rgba(231, 76, 60, 0.1);
                        color: #e74c3c;
                        border: 1px solid rgba(231, 76, 60, 0.2);
                        border-radius: 5px;
                        text-align: left;
                        cursor: pointer;
                        transition: all 0.3s;
                        font-size: 14px;
                        font-weight: 500;
                    " onmouseover="this.style.background='rgba(231, 76, 60, 0.2)'" onmouseout="this.style.background='rgba(231, 76, 60, 0.1)'">
                        🚪 ログアウト
                    </button>
                </form>
            </div>
        </div>
        
        <!-- メインコンテンツ -->
        <div class="main-content">
            <div class="content-header">
                <h1 class="content-title">📈 詳細レポート</h1>
                <p style="color: #6c757d;">地域別・デバイス別・時間帯別などの詳細な分析レポートを表示します</p>
            </div>
            
            <!-- フィルター -->
            <div class="report-filters">
                <select id="campaignFilter">
                    <option value="all">すべてのキャンペーン</option>
                </select>
                <select id="periodFilter">
                    <option value="last_7d">過去7日間</option>
                    <option value="last_30d">過去30日間</option>
                    <option value="this_month">今月</option>
                    <option value="last_month">先月</option>
                </select>
                <select id="breakdownType">
                    <option value="region">地域別</option>
                    <option value="device_platform">デバイス別</option>
                    <option value="hourly">時間帯別</option>
                    <option value="age,gender">年齢・性別</option>
                </select>
                <button class="btn-primary" onclick="loadDetailedReport()">レポート生成</button>
            </div>
            
            <!-- エクスポートボタン -->
            <div class="export-buttons">
                <button class="btn-export" onclick="exportCSV()">📊 CSV出力</button>
                <button class="btn-export" onclick="exportPDF()">📄 PDF出力</button>
            </div>
            
            <!-- レポートグリッド -->
            <div class="report-grid">
                <!-- 地域別パフォーマンス -->
                <div class="report-card">
                    <h2 class="card-title">🌍 地域別パフォーマンス</h2>
                    <div class="chart-container">
                        <canvas id="regionChart"></canvas>
                    </div>
                </div>
                
                <!-- デバイス別パフォーマンス -->
                <div class="report-card">
                    <h2 class="card-title">📱 デバイス別パフォーマンス</h2>
                    <div class="chart-container">
                        <canvas id="deviceChart"></canvas>
                    </div>
                </div>
                
                <!-- 時間帯別パフォーマンス -->
                <div class="report-card full-width">
                    <h2 class="card-title">⏰ 時間帯別パフォーマンス</h2>
                    <div class="chart-container" style="height: 200px;">
                        <canvas id="hourlyChart"></canvas>
                    </div>
                </div>
                
                <!-- 統計サマリー -->
                <div class="report-card full-width">
                    <h2 class="card-title">📊 統計サマリー</h2>
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="stat-value" id="totalSpend">¥0</div>
                            <div class="stat-label">総広告費</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="totalConversions">0</div>
                            <div class="stat-label">総コンバージョン数</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="avgCPA">¥0</div>
                            <div class="stat-label">平均CPA</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value" id="avgCTR">0%</div>
                            <div class="stat-label">平均CTR</div>
                        </div>
                    </div>
                </div>
                
                <!-- 詳細データテーブル -->
                <div class="report-card full-width">
                    <h2 class="card-title">📋 詳細データ</h2>
                    <div id="detailTableContainer">
                        <div class="loading">データを読み込み中...</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        let campaigns = [];
        let reportData = null;
        let charts = {};
        
        // ページ読み込み時の初期化
        document.addEventListener('DOMContentLoaded', async () => {
            await loadCampaigns();
            await loadDetailedReport();
        });
        
        // キャンペーン一覧を取得
        async function loadCampaigns() {
            try {
                const response = await fetch('/api/campaigns/details?period=last_7d');
                const data = await response.json();
                
                if (data.success) {
                    campaigns = data.campaigns;
                    const select = document.getElementById('campaignFilter');
                    const options = campaigns.map(c => 
                        `<option value="${c.id}">${c.name}</option>`
                    ).join('');
                    select.innerHTML = '<option value="all">すべてのキャンペーン</option>' + options;
                }
            } catch (error) {
                console.error('キャンペーン取得エラー:', error);
            }
        }
        
        // 詳細レポートを読み込み
        async function loadDetailedReport() {
            try {
                const campaignId = document.getElementById('campaignFilter').value;
                const period = document.getElementById('periodFilter').value;
                const breakdown = document.getElementById('breakdownType').value;
                
                const response = await fetch(`/api/reports/detailed?campaign=${campaignId}&period=${period}&breakdown=${breakdown}`);
                const data = await response.json();
                
                if (data.success) {
                    reportData = data.report;
                    updateCharts(data.report);
                    updateStats(data.report);
                    updateTable(data.report);
                }
            } catch (error) {
                console.error('レポート取得エラー:', error);
                // ダミーデータで表示
                showDummyData();
            }
        }
        
        // チャートを更新
        function updateCharts(reportData) {
            const data = reportData.data || [];
            // 地域別チャート
            if (charts.region) charts.region.destroy();
            const regionCtx = document.getElementById('regionChart').getContext('2d');
            charts.region = new Chart(regionCtx, {
                type: 'doughnut',
                data: {
                    labels: ['東京', '大阪', '名古屋', '福岡', 'その他'],
                    datasets: [{
                        data: [35, 25, 15, 10, 15],
                        backgroundColor: [
                            '#667eea', '#764ba2', '#f093fb', '#4facfe', '#43e97b'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
            
            // デバイス別チャート
            if (charts.device) charts.device.destroy();
            const deviceCtx = document.getElementById('deviceChart').getContext('2d');
            charts.device = new Chart(deviceCtx, {
                type: 'pie',
                data: {
                    labels: ['モバイル', 'デスクトップ', 'タブレット'],
                    datasets: [{
                        data: [65, 25, 10],
                        backgroundColor: ['#667eea', '#764ba2', '#f093fb']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
            
            // 時間帯別チャート
            if (charts.hourly) charts.hourly.destroy();
            const hourlyCtx = document.getElementById('hourlyChart').getContext('2d');
            const hours = Array.from({length: 24}, (_, i) => `${i}時`);
            const hourlyData = Array.from({length: 24}, () => Math.random() * 1000 + 500);
            
            charts.hourly = new Chart(hourlyCtx, {
                type: 'line',
                data: {
                    labels: hours,
                    datasets: [{
                        label: 'インプレッション',
                        data: hourlyData,
                        borderColor: '#667eea',
                        backgroundColor: 'rgba(102, 126, 234, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });
        }
        
        // 統計情報を更新
        function updateStats(reportData) {
            const summary = reportData.summary || {};
            document.getElementById('totalSpend').textContent = '¥' + (summary.totalSpend || 0).toLocaleString();
            document.getElementById('totalConversions').textContent = summary.totalConversions || 0;
            document.getElementById('avgCPA').textContent = '¥' + (summary.avgCPA || 0).toLocaleString();
            document.getElementById('avgCTR').textContent = (summary.avgCTR || 0) + '%';
        }
        
        // テーブルを更新
        function updateTable(reportData) {
            const data = reportData.data || [];
            if (data.length === 0) {
                document.getElementById('detailTableContainer').innerHTML = '<div class="loading">データがありません</div>';
                return;
            }
            
            const html = `
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>セグメント</th>
                            <th>インプレッション</th>
                            <th>クリック</th>
                            <th>消化額</th>
                            <th>CTR</th>
                            <th>CPC</th>
                            <th>CV</th>
                            <th>CPA</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${data.map(row => `
                            <tr>
                                <td>${row.name || '-'}</td>
                                <td>${(row.impressions || 0).toLocaleString()}</td>
                                <td>${(row.clicks || 0).toLocaleString()}</td>
                                <td>¥${(row.spend || 0).toLocaleString()}</td>
                                <td>${(row.ctr || 0).toFixed(2)}%</td>
                                <td>¥${Math.round(row.spend / row.clicks || 0).toLocaleString()}</td>
                                <td>${row.conversions || 0}</td>
                                <td>¥${(row.cpa || 0).toLocaleString()}</td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            `;
            document.getElementById('detailTableContainer').innerHTML = html;
        }
        
        // ダミーデータ表示
        function showDummyData() {
            updateCharts({});
            updateStats({});
            updateTable({});
        }
        
        // CSV出力
        function exportCSV() {
            alert('CSV出力機能は準備中です');
        }
        
        // PDF出力
        function exportPDF() {
            alert('PDF出力機能は準備中です');
        }
    </script>
</body>
</html>